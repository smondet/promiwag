


.PHONY: clean update_externals \
 install_library reinstall_library uninstall_library \
 doc whole_doc doc_library web_site

USE_OCAMLFIND = true

OCAMLPACKS[] =
   extlib
   easy-format
   unix
#   pcre
#   sexplib.core

if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true #$(not $(OCAMLOPT_EXISTS))

OCAMLFLAGS    +=
OCAMLCFLAGS   +=
OCAMLOPTFLAGS +=
OCAML_LINK_FLAGS +=
OCAML_BYTE_LINK_FLAGS +=
OCAML_NATIVE_LINK_FLAGS +=
OCAMLFINDFLAGS +=


clean:
    rm -fr _build OMakefile.omc OMakeroot.omc .omakedb .omakedb.lock

update_externals: # Go for the last version
    svn export http\://yaboon.googlecode.com/svn/trunk/PolyComp/PolyComp.ml src/lib/promiwag_Yaboon_PolyComp.ml


if $(not $(file-exists _build/))
    mkdir -p _build/lib _build/app _build/doc/libref

vmount(-l, src/lib, _build/lib)
vmount(-l, src/app, _build/app)

LIBREF_DIR=$(dir _build/doc/libref/)
whole_doc: doc_library doc_site

doc: doc/module_std.brtx doc/stiel_interface.brtx
  dbw  -persist-with _build/dbw_persistance \
      -named-template right_pane_redish-linked \
      doc _build/doc

# The only difference with the `shell' version is the double dollars: $$
# in sed expressions.
doc/module_std.brtx: promiwag_std.mli
  echo "{bypass endofbigbypass}" > /tmp/caml2html.brtx
  sed '/^$$/d' promiwag_std.mli | \
   caml2html -nf -inline -body -ext "b: brtx" -ext "i: echo ''" \
    -ext "bq: cat > /tmp/ttt; echo '{~}{b|â€¢} ' > /tmp/uuu ; cat /tmp/ttt >> /tmp/uuu ; echo '' >> /tmp/uuu ; brtx -i /tmp/uuu" | \
   sed -n '1h;1!H;$${;g;s/<pre>[\n ]*<\/pre>//g;p;}' \
   >> /tmp/caml2html.brtx
  echo "{endofbi""gbypass}" >> /tmp/caml2html.brtx
  mv /tmp/caml2html.brtx doc/module_std.brtx

doc/stiel_interface.brtx: reinstall_library
  echo "include Promiwag_stiel.Standard_renaming;;" | \
    ocamlrun ocaml -init tools/initocaml.ml > /tmp/stiel_lang.ml
  tail -n +13 /tmp/stiel_lang.ml | sed 's/Promiwag_stiel.Definition.//g' > /tmp/tt.ml
  echo "{begin t}" > doc/stiel_interface.brtx
  cat /tmp/tt.ml \
    | sed 's/sig//g' \
    | sed 's/end//g' \
    | sed 's/#//g' \
    | sed 's/\([{}]\)/{\1}/g' \
    | sed 's/\(| [^`]\)/{br}\1/g' \
    | sed 's/ type /{br}{b|type} /g' \
    | sed 's/ and /{br}{b|and} /g' \
    | sed 's/ val /{br}{b|val} /g' \
    | sed 's/\(module[a-zA-Z_ ]\+\):/{section|\1}/g' \
    >> doc/stiel_interface.brtx
  echo "{end}" >> doc/stiel_interface.brtx

.SUBDIRS: _build/lib _build/app # _build/doc/


